#!/bin/sh -e
#
# 2021,2022 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of the skonfig set __redmine.
#
# This set is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This set is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this set. If not, see <http://www.gnu.org/licenses/>.
#

. "${__type:?}/files/functions.sh"

install_dir='/usr/local/share/redmine'

redmine_user='redmine'

os=$(cat "${__global:?}/explorer/os")

db_type=$(cat "${__object:?}/parameter/db-type")
version_should=$(cat "${__object:?}/parameter/version")

cksum_is=$(cat "${__object:?}/explorer/archive-sum")

# shellcheck disable=SC2034
IFS='	' read -r version_is sha256_should cksum_should <<EOF
$(
	case ${version_should}
	in
		(latest)
			tail -n 1 "${__type:?}/files/cksums.tsv"
			;;
		(*)
			awk -F '\t' -v vers="${version_should}" '$1 == vers' "${__type:?}/files/cksums.tsv"
			;;
	esac
)
EOF

# Remove space from $cksum_should to be same as archive-sum
cksum_should=$(printf '%s\n' "${cksum_should}" | tr -d ' ')

test -n "${version_is}" || {
	if test "${version_should}" != 'latest'
	then
		printf 'Invalid --version: %s\n' "${version_should}" >&2
	else
		printf 'No Redmine versions are currently known.\n' >&2
	fi
	exit 1
}

case ${os}
in
	(debian|devuan|ubuntu)
		# Dependency packages
		__package_apt ruby
		__package_apt ruby-bundler

		# Build tools and -dev headers for racc
		__package_apt build-essential  # gcc, libc6-dev, make
		__package_apt ruby-dev
		__package_apt zlib1g-dev

		# ImageMagick
		__package_apt imagemagick-6.q16
		__package_apt ghostscript

		case ${db_type}
		in
			(postgresql)
				__package_apt libpq-dev
				;;
			(sqlite)
				__package_apt libsqlite3-dev
				;;
		esac

		if version_ge "${version_is}" 4.1.0
		then
			:  # no additional packages required
		elif version_ge "${version_is}" 4.0.0
		then
			# ImageMagick 6 dev headers required by rmagick
			__package_apt libmagickcore-6.q16-dev
			__package_apt libmagickwand-6.q16-dev

			__package_apt pkg-config  # required by rmagick

			__package_apt patch  # required to apply patches for mini_portile2
		fi
		;;
	(*)
		: "${__type:?}"  # make shellcheck happy
		printf "Your operating system (%s) is currently not supported by this type (%s)\n" "${os}" "${__type##*/}" >&2
		printf "Please contribute an implementation for it if you can.\n" >&2
		exit 1
		;;
esac


redmine_dist_url="https://www.redmine.org/releases/redmine-${version_is:?}.tar.gz"

if test "${cksum_should}" != "${cksum_is}"
then
	__download "/tmp/${redmine_dist_url##*/}" \
		--url "${redmine_dist_url}" \
		--download remote \
		--sum "sha256:${sha256_should:?}"
	redmine_download_require="${redmine_download_require-}${redmine_download_require:+ }__download/tmp/${redmine_dist_url##*/}"

	require=${redmine_download_require} \
	__unpack "/tmp/${redmine_dist_url##*/}" \
		--destination "${install_dir:?}" \
		--sum-file "${install_dir:?}/.cdist__unpack_sum" \
		--tar-strip 1 \
		--tar-extra-args ' -o' \
		--backup-destination
	redmine_download_require="${redmine_download_require-}${redmine_download_require:+ }__unpack/tmp/${redmine_dist_url##*/}"
fi

################################################################################
# User

require=${redmine_download_require-} \
__user "${redmine_user}" \
	--system \
	--shell /sbin/nologin \
	--comment 'Redmine service user' \
	--home "${install_dir:?}"


################################################################################
# Redmine configuration

mkdir "${__object:?}/files"

# NOTE: do not swallow errors!
"${__type:?}/files/mkdatabase.yml.sh" >"${__object:?}/files/database.yml"

require=${redmine_download_require-} \
__file "${install_dir:?}/config/database.yml" \
	--state present --owner 0 --group "${redmine_user}" --mode 0750 \
	--source "${__object:?}/files/database.yml"
